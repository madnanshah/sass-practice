@use 'sass:math';

$grid-columns:12;
$grid-gaps:(
    '':0,
    '1':10px,
    '2':20px,
    '3':30px,
);

$layout-values: flex-start, flex-end, center, space-between, space-around;

// base layout
.container{
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
    box-sizing: border-box;
}

// row 
.row{
    display: flex;
    flex-flow: row wrap;
}

// gid gaps

@each $key, $val in $grid-gaps {
    .gap-#{$key} > * {
        padding: $val;
    }
    .gap-#{$key}{
        margin-left: -$val;
        margin-right: -$val;
    }
}


// justify content classes
@each $val in $layout_values {
    .justify-#{$val}{
        justify-content: $val;
    }
}

// column 
@mixin colprops($i) {
    box-sizing: border-box;
    flex-grow: 0;
    width: math.div($i * 100%, $grid-columns);
}


@include xs {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xs{
            @include colprops($i);
        }
    }
}

@include sm {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-sm{
            @include colprops($i);
        }
    }
}

@include md {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-md{
            @include colprops($i);
        }
    }
}

@include lg {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-lg{
            @include colprops($i);
        }
    }
}

@include xl {
    @for $i from 1 through $grid-columns {
        .col-#{$i}-xl{
            @include colprops($i);
        }
    }
}